
sample-1

0 0 0 1 1
3 9 2 6 4

Gomamayo Sequence 
- 00101 3,4: 2+6=8
- 10010 1,5: 3+4=7
- 01001 2,4: 9+6=15
- 10100 1,3,4,5: 3+2+6+4=15

- 11010 1,2,5: 3+9+4=16
- 01101 2,3,4: 9+2+6=17
- 10110 1,3,5: 3+2+4=9
- 01011 2: 9

(N-1)*2パターンある
一つずつ計算するとO(N^2)

パターン数を削るのは無理そう
(変更回数の多さなどはコスト依存なので相関がない)

コスト計算を削る方法を考える

累積和が無難？
操作の方法で分類できそう

- 10010 1,5: 3+4=7
- 11010 1,2,5: 3+9+4=16　(上の並びよりコストが高いことが自明なので外せる)
- 10110 1,3,5: 3+2+4=9　(上の並びよりコストが高いことが自明なので外せる)
- 10100 1,3,4,5: 3+2+6+4=15 (上の並びで自明なので外せる)

- 01011 2: 9
- 01001 2,4: 9+6=15 (上の並びよりコストが高いことが自明なので外せる)
- 01101 2,3,4: 9+2+6=17 (上の並びでコストが高いことが自明なので外せる)

- 00101 3,4: 2+6=8

数値の並びで分類
- 

Ans-1

S : 0 0 0 1 1
C : 3 9 2 6 4

s 
0 : 左のとき入れ替える必要がない
1 : 右のとき入れ替える必要がない

s: 0  1  0  0  1
l: 0  0  9  9  13
r: 11 8  8  6  0
a:    17 17 15

s: 1  0  1 1  0
l: 0  3  3 5  11
r: 13 13 4 4  4
a: 13 16 7 9  15


Ans-2
動的計画法

S : 0 0 0 1 1
C : 3 9 2 6 4

i : 文字列の要素番号
j : 文字列が連続した回数
k : 0~iの変換コスト

k=0
i   : 0  1  2  3  4 
---------------------
j=0 : 0  3  9  11 13
j=1 : ∞ 0  3  8  7

k=1
i   : 0  1  2  3  4 
---------------------
j=0 : 3  9  5  9  11
j=1 : ∞ 12 2  3  8

Sample-3

1 1 1 1 1 1 0 0 1 1 1

- 10110101010

1 0 1 0 1 0 0 1 1 0 1
