#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n) - 1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n) - 1; (i) >= (int)(m); --(i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;

int64_t solve(int N, const std::vector<int64_t> &l, const std::vector<int64_t> &r) {
  using Pair = pair<int64_t, int64_t>;
  vector<Pair> p(N);
  for (int i = 0; i < N; i++) {
    p[i].first = l[i];
    p[i].second = r[i];
  }
  sort(p.begin(), p.end(), [](const Pair &a, const Pair &b) { return a.first < b.first; });

  int64_t ans = 0;
  int j = 0;
  for (int i = 0; i < N; i++) {
    while ((i != j) && (j < N) &&
           (((i > j) && (p[i].first <= p[j].second)) || ((i < j) && (p[i].second >= p[j].second)))) {
      ans++;
      j++;
    }
  }
  return ans;
}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main() {
  std::ios::sync_with_stdio(false);
  std::cin.tie(nullptr);
  int N;
  std::cin >> N;
  std::vector<int64_t> l(N), r(N);
  REP(i, N) { std::cin >> l[i] >> r[i]; }
  auto ans = solve(N, l, r);
  std::cout << ans << '\n';
  return 0;
}
