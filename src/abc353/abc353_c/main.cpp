#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n) - 1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n) - 1; (i) >= (int)(m); --(i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;

int64_t solve(int N, std::vector<int64_t> &A) {
  constexpr int64_t mod = 100000000;

  sort(A.begin(), A.end());

  int64_t ans = 0;
  for (auto a : A) {
    ans += a;
  }
  ans *= (N - 1);

  int64_t r = N - 1;
  for (int i = 0; i < N; i++) {
    while (r >= i && A[i] + A[r] >= mod) {
      r--;
    }
    ans -= (N - max(r, static_cast<int64_t>(i)) - 1) * mod;
  }

  return ans;
}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main() {
  std::ios::sync_with_stdio(false);
  std::cin.tie(nullptr);
  int N;
  std::cin >> N;
  std::vector<int64_t> A(N);
  REP(i, N) { std::cin >> A[i]; }
  auto ans = solve(N, A);
  std::cout << ans << '\n';
  return 0;
}
