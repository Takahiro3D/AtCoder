#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n) - 1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n) - 1; (i) >= (int)(m); --(i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;

int64_t _pow(int64_t b, int64_t e) {
  int64_t ans = 1;
  for (int64_t i = 0; i < e; i++) {
    ans *= b;
  }
  return ans;
}

constexpr int64_t MOD = 998244353;
int64_t solve(int N, const std::vector<int64_t> &A) {
  int64_t ans = 0;

  // f(x, y) = x*10^len(y) + y
  // sigma{i=1, N-1} sigma{j=i+1, N} Ai*10^len(Aj)
  vector<int64_t> B(N);
  for (int i = 0; i < N; i++) {
    B[i] = _pow(10, to_string(A[i]).size()) % MOD;
  }

  int64_t s = 0;
  for (int i = N - 1; i >= 0; i--) {
    ans += A[i] * s;
    ans %= MOD;
    s += B[i];
    s %= MOD;
  }

  // sigma{i=1, N-1} sigma{j=i+1, N} Aj
  for (int i = 0; i < N; i++) {
    ans += A[i] * i;
    ans %= MOD;
  }

  return ans;
}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main() {
  std::ios::sync_with_stdio(false);
  std::cin.tie(nullptr);
  int N;
  std::cin >> N;
  std::vector<int64_t> A(N);
  REP(i, N) { std::cin >> A[i]; }
  auto ans = solve(N, A);
  std::cout << ans << '\n';
  return 0;
}
