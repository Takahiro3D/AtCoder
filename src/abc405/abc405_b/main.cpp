#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n) - 1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n) - 1; (i) >= (int)(m); --(i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;

int64_t solve(int N, int64_t M, std::vector<int64_t> &A) {
  int ans = 0;

  auto isAll = [&]() {
    vector<int64_t> cnt(M);
    for (auto a : A) {
      cnt[a - 1]++;
    }
    for (auto c : cnt) {
      if (c == 0) {
        return false;
      }
    }
    return true;
  };

  while (isAll()) {
    A.pop_back();
    ans++;
  }
  return ans;
}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main() {
  std::ios::sync_with_stdio(false);
  std::cin.tie(nullptr);
  int N;
  int64_t M;
  std::cin >> N;
  std::vector<int64_t> A(N);
  std::cin >> M;
  REP(i, N) { std::cin >> A[i]; }
  auto ans = solve(N, M, A);
  std::cout << ans << '\n';
  return 0;
}
