#include <algorithm>
#include <bitset>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <ctime>
#include <deque>
#include <fstream>
#include <functional>
#include <iostream>
#include <map>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <utility>
#include <vector>
using namespace std;

using Pair = std::pair<int, int>;

// Generated by 2.14.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can
// remove this line by using your custom template)
int main() {
  int N, M;
  cin >> N >> M;

  vector<vector<int>> G(N);
  for (int i = 0; i < M; i++) {
    int a, b;
    cin >> a >> b;
    a--;
    b--;
    G[a].emplace_back(b);
  }

  // BFS
  vector<int> G_dist(N, INT32_MAX);
  queue<int> q;
  // Initial emplace
  for (const auto& next : G[0]) {
    G_dist[next] = 1;
    q.emplace(next);
  }
  while (!q.empty()) {
    auto v = q.front();
    q.pop();

    for (const auto& next : G[v]) {
      // Insert if the dist is minimum
      const auto d = G_dist[v] + 1;
      if (d < G_dist[next]) {
        G_dist[next] = d;
        q.emplace(next);
      }
    }
  }
  if (G_dist[0] == INT32_MAX) {
    cout << -1 << endl;
    return 0;
  }

  cout << G_dist[0] << endl;

  return 0;
}
