#include <algorithm>
#include <bitset>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <ctime>
#include <deque>
#include <fstream>
#include <functional>
#include <iostream>
#include <map>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <utility>
#include <vector>
using namespace std;

using Pair = pair<int64_t, int64_t>;

// Generated by 2.14.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can
// remove this line by using your custom template)
int main() {
  int T;
  cin >> T;

  for (int i = 0; i < T; i++) {
    int N, K;
    cin >> N >> K;

    vector<Pair> ab(N);
    for (int i = 0; i < N; i++) {
      cin >> ab[i].first;
    }
    for (int i = 0; i < N; i++) {
      cin >> ab[i].second;
    }
    sort(ab.begin(), ab.end());

    int64_t ans = INT64_MAX;
    int64_t sum = 0;

    priority_queue<int> q;
    for (auto [a, b] : ab) {
      // Add value
      sum += b;
      q.emplace(b);
      if (q.size() > K) {
        // Delete max value
        sum -= q.top();
        q.pop();
      }
      // Calculate speficied formula if the queue size is filfilled.
      if (q.size() == K) {
        ans = min(ans, sum * a);
      }
    }

    cout << ans << endl;
  }

  return 0;
}
