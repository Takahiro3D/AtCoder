#include <bits/stdc++.h>
using namespace std;

// Generated by 2.14.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can
// remove this line by using your custom template)
int main() {
  int N, M;
  cin >> N >> M;

  vector<int> X(M);
  vector<int> A(M);

  for (auto& x : X) {
    cin >> x;
  }
  for (auto& a : A) {
    cin >> a;
  }

  int n = 1;
  int64_t stones = 0;
  int64_t ans = 0;
  for (int i = 0; i < M; i++) {
    auto x = X[i];
    auto a = A[i];

    if (n == x) {
      // current stones exclude own stone
      stones += a - 1;
      if (i + 1 < M) {
        auto x_next = X[i + 1];

        int64_t dist = x_next - x;

        if (stones >= dist - 1) {
          // sum of AP
          // n=dist, d=1, a1= current stones, an= remain stones
          ans += dist * (stones + (stones - (dist - 1))) / 2;
          stones -= dist - 1;
          n = x_next;
        } else {
          ans = -1;
          break;
        }

      } else {
        // tail processing
        int64_t dist = N - x;
        if (stones == dist) {
          ans += dist * (stones + 1) / 2;
        } else {
          ans = -1;
          break;
        }
      }
    } else {
      ans = -1;
      break;
    }
  }

  cout << ans << endl;

  return 0;
}
