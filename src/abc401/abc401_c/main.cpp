#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n) - 1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n) - 1; (i) >= (int)(m); --(i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;

int64_t solve(int64_t N, int64_t K) {
  constexpr int64_t DIV = 1'000'000'000;
  vector<int64_t> v(N + 1);
  int64_t k = 0;
  REP(i, N + 1) {
    if (i < K) {
      v[i] = 1;
      k++;
    } else {
      v[i] = k;
      if (k > v[i - K]) {
        k -= v[i - K];
      } else {
        k += DIV - v[i - K];
      }
      k += v[i];
      if (k >= DIV) {
        k -= DIV;
      }
    }
  }
  return v[N] % DIV;
}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main() {
  std::ios::sync_with_stdio(false);
  std::cin.tie(nullptr);
  int64_t N, K;
  std::cin >> N >> K;
  auto ans = solve(N, K);
  std::cout << ans << '\n';
  return 0;
}
