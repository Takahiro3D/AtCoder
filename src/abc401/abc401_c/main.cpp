#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n) - 1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n) - 1; (i) >= (int)(m); --(i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;

int64_t solve(int64_t N, int64_t K) {
  constexpr int64_t DIV = 1'000'000'000;

  vector<int64_t> v(max(K, N + 1));
  vector<int64_t> prefix_sums(v.size() + 1);
  REP(i, K + 1) {
    v[i] = 1;
    prefix_sums[i] = i;
  }
  for (int i = K; i <= N; i++) {
    v[i] = (prefix_sums[i] - prefix_sums[i - K] + DIV) % DIV;
    prefix_sums[i + 1] = (prefix_sums[i] + v[i]) % DIV;
  }
  return v[N];
}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main() {
  std::ios::sync_with_stdio(false);
  std::cin.tie(nullptr);
  int64_t N, K;
  std::cin >> N >> K;
  auto ans = solve(N, K);
  std::cout << ans << '\n';
  return 0;
}
