#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n) - 1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n) - 1; (i) >= (int)(m); --(i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;

void solve() {
  int N;
  string S;
  cin >> N >> S;

  // DP
  // i: string index
  // j: section
  constexpr int INF = 0x3FFFFFFF;
  vector<vector<int>> dp(N + 1, vector<int>(3, INF));
  dp[0][0] = 0;
  REP(i, N) {
    if (S[i] == '0') {
      dp[i + 1][0] = dp[i][0];
      dp[i + 1][1] = min(dp[i][1], dp[i][0]) + 1;
      dp[i + 1][2] = min(dp[i][1], dp[i][2]);
    } else {
      dp[i + 1][0] = dp[i][0] + 1;
      dp[i + 1][1] = min(dp[i][1], dp[i][0]);
      dp[i + 1][2] = min(dp[i][1], dp[i][2]) + 1;
    }
  }

  auto ans = *min_element(ALL(dp[N]));
  cout << ans << endl;
}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main() {
  std::ios::sync_with_stdio(false);
  std::cin.tie(nullptr);

  int64_t T;
  std::cin >> T;
  REP(i, T) { solve(); }

  return 0;
}
