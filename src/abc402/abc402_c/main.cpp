#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n) - 1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n) - 1; (i) >= (int)(m); --(i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;

auto solve(int N, int M, const std::vector<int64_t> &K, const std::vector<std::vector<int64_t>> &A,
           const std::vector<int64_t> &B) {
  vector<vector<int>> menuList(N);
  vector<int> cnt(N);
  REP(i, M) {
    cnt[i] = K[i];
    REP(j, K[i]) { menuList[A[i][j] - 1].emplace_back(i); }
  }

  vector<int> ans(N);
  int tmp = 0;
  REP(i, N) {
    for (auto m : menuList[B[i] - 1]) {
      cnt[m]--;
      if (cnt[m] == 0) {
        tmp++;
      }
    }
    ans[i] = tmp;
  }
  return ans;
}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main() {
  std::ios::sync_with_stdio(false);
  std::cin.tie(nullptr);
  int a, b;
  std::cin >> a;
  std::vector<int64_t> e(a);
  std::cin >> b;
  std::vector<int64_t> c(b);
  std::vector<std::vector<int64_t>> d(b, std::vector<int64_t>());
  REP(i, b) {
    std::cin >> c[i];
    REP(j, c[i]) {
      int A;
      std::cin >> A;
      d[i].emplace_back(A);
    }
  }
  REP(i, a) { std::cin >> e[i]; }
  auto ans = solve(a, b, c, d, e);
  for (auto f : ans) {
    std::cout << f << '\n';
  }
  return 0;
}
