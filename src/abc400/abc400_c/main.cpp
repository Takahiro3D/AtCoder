#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n) - 1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n) - 1; (i) >= (int)(m); --(i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;

int64_t pow_i(int64_t x, int64_t y) {
  int64_t ans = 1;
  REP(i, y) { ans *= x; }
  return ans;
}

uint64_t solve(uint64_t N) {
  uint64_t ans = 0;

  uint64_t b = 1;
  uint64_t b_pow = pow_i(b, 2);
  while (b_pow <= N) {
    auto tmp = N / b_pow;
    ans += bit_width(tmp) - 1;

    b += 2;
    b_pow = pow_i(b, 2);
  }
  return ans;
}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main() {
  std::ios::sync_with_stdio(false);
  std::cin.tie(nullptr);
  int64_t N;
  std::cin >> N;
  auto ans = solve(N);
  std::cout << ans << '\n';
  return 0;
}
