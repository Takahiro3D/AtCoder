#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n)-1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n)-1; (i) >= (int)(m); --(i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;

using Graph = vector<vector<int64_t>>;

Graph solve(int n, const auto &a) {
  Graph g(n);
  for (int i = 0; i < n; i++) {
    for (int j = 0; j < n; j++) {
      if (a[i][j] == 1) {
        g[i].emplace_back(j + 1);
      }
    }
  }
  return g;
}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main() {
  std::ios::sync_with_stdio(false);
  std::cin.tie(nullptr);
  // failed to analyze input format
  int n;
  std::cin >> n;
  std::vector<std::vector<int64_t>> a(n, vector<int64_t>(n));
  REP(i, n) {
    REP(j, n) { std::cin >> a[i][j]; }
  }
  auto ans = solve(n, a);
  for (auto r : ans) {
    for (auto a : r) {
      cout << a << " ";
    }
    cout << "\n";
  }
  return 0;
}
