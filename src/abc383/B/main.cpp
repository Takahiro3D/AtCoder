#include <bits/stdc++.h>
using namespace std;

// Generated by 2.14.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can
// remove this line by using your custom template)
int main() {
  int H, W, D;
  cin >> H >> W >> D;

  vector<vector<bool>> S(H, vector<bool>(W));
  for (int i = 0; i < H; i++) {
    for (int j = 0; j < W; j++) {
      char c;
      cin >> c;
      S[i][j] = (c == '.');
    }
  }

  auto addHumidified = [&](auto& s, int h, int w) {
    for (int i = 0; i < H; i++) {
      if (abs(i - h) > D) {
        continue;
      }
      for (int j = 0; j < W; j++) {
        if ((abs(j - w) + abs(i - h)) > D) {
          continue;
        }
        if (S[i][j]) {
          s.emplace(i, j);
        }
      }
    }
  };

  int ans = 0;
  for (int i = 0; i < H; i++) {
    for (int j = 0; j < W; j++) {
      set<pair<int, int>> s;
      // First humidifier
      if (S[i][j]) {
        addHumidified(s, i, j);
        for (int k = i; k < H; k++) {
          for (int l = j; l < W; l++) {
            // Second humidifier
            if (S[k][l]) {
              auto s_tmp = s;
              addHumidified(s_tmp, k, l);
              int size = s_tmp.size();
              ans = max(ans, size);
            }
          }
        }
      }
    }
  }

  cout << ans << endl;

  return 0;
}
