#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n)-1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n)-1; (i) >= (int)(m); --(i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;

const std::string YES = "Yes";
const std::string NO = "No";
bool solve(int N, int64_t A, int64_t B, const std::vector<int64_t> &D) {
  int64_t week = A + B;
  vector<int64_t> v;
  for (int i = 0; i < N; i++) {
    v.emplace_back(D[i] % week);
  }
  sort(v.begin(), v.end());
  // insert next week days to check change of week
  v.emplace_back(v[0] + week);

  int size = v.size();
  for (int i = 0; i < size; i++) {
    if ((v[i + 1] - v[i]) > B) {
      // next day is after work days
      return true;
    }
  }

  return false;
}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main() {
  std::ios::sync_with_stdio(false);
  std::cin.tie(nullptr);
  int N;
  int64_t A, B;
  std::cin >> N;
  std::vector<int64_t> D(N);
  std::cin >> A >> B;
  REP(i, N) { std::cin >> D[i]; }
  auto ans = solve(N, A, B, D);
  std::cout << (ans ? YES : NO) << '\n';
  return 0;
}
