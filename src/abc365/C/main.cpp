#include <algorithm>
#include <bitset>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <ctime>
#include <deque>
#include <fstream>
#include <functional>
#include <iostream>
#include <map>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <utility>
#include <vector>
using namespace std;

// Generated by 2.14.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can
// remove this line by using your custom template)
int main() {
  int64_t N, M;
  cin >> N >> M;
  vector<int64_t> A(N);
  for (auto& a : A) {
    cin >> a;
  }

  sort(A.begin(), A.end());

  auto f = [&](int64_t x) {
    int64_t sum = 0;
    for (auto a : A) {
      sum += std::min(x, a);
    }
    return sum <= M;
  };

  int64_t min = 0;
  int64_t max = *(A.end() - 1);

  if (f(max)) {
    cout << "infinite" << endl;
    return 0;
  }

  // Binary search
  while (min + 1 < max) {
    int64_t tmp = (min + max) / 2;
    if (f(tmp)) {
      min = tmp;
    } else {
      max = tmp;
    }
  }

  cout << min << endl;
  return 0;
}
