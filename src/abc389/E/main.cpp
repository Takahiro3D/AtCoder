#include <bits/stdc++.h>
using namespace std;

// Generated by 2.14.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can
// remove this line by using your custom template)
int main() {
  int64_t N, M;
  cin >> N >> M;

  vector<int64_t> P(N);
  for (auto& p : P) {
    cin >> p;
  }

  int64_t total = 0;
  int64_t num = 0;
  auto judge = [&](int64_t c) {
    total = 0;
    num = 0;
    for (auto& p : P) {
      // Price for next piece
      // (k+1)^2*p - k^2*p  = (2K +1)*p
      // condition
      // (2(K-1) + 1)*p <= C
      auto k = ((c / p) + 1) / 2;
      // To avoid zero division
      if (k == 0) continue;
      // To avoid overflow
      if ((M / k / k / p) == 0) {
        return false;
      }
      total += k * k * p;
      num += k;
      if (total > M) {
        return false;
      }
    }
    return true;
  };

  int64_t ac = 1, wa = M + 1;
  while (ac + 1 < wa) {
    auto wj = (ac + wa) / 2L;
    if (judge(wj)) {
      ac = wj;
    } else {
      wa = wj;
    }
  }

  judge(ac);
  // Add remain pieces
  num += (M - total) / wa;
  cout << num << endl;

  return 0;
}
