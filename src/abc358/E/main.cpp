#include <algorithm>
#include <bitset>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <ctime>
#include <deque>
#include <fstream>
#include <functional>
#include <iostream>
#include <map>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <utility>
#include <vector>
using namespace std;

const long long MOD = 998244353;
const int N = 26;

int64_t Permutation(int l, int r) {
  int ret = l;
  for (int i = l + 1; i <= r; i++) {
    ret = ret * i % MOD;
  }
  return ret;
}

// Generated by 2.14.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can
// remove this line by using your custom template)
int main() {
  int K;
  cin >> K;

  vector<int> C(N);
  for (int i = 0; i < N; i++) {
    cin >> C[i];
  }

  vector<int> dp(K + 1);
  dp[0] = 1;

  for (int i = 0; i < N; i++) {
    vector<int> old(K + 1);
    swap(old, dp);
    for (int j = 0; j < K + 1; j++) {
      for (int a; a <= c[i]; a++) {
        int nj = j + a;
        if (nj > K) {
          break;
        }
        dp[nj] += old[j] * comb(nj, a);
      }
    }
  }

  return 0;
}
