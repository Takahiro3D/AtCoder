#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n) - 1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n) - 1; (i) >= (int)(m); --(i))
#define ALL(x) ::std::begin(x), ::std::end(x)
#define ALL_R(x) ::std::rbegin(x), ::std::rend(x)
using namespace std;

int64_t solve(int N, int M, std::vector<int64_t> &B, std::vector<int64_t> &W) {
  sort(ALL_R(B));
  sort(ALL_R(W));

  int64_t max_sum = 0;
  int64_t max_w_sum = 0;
  int64_t w_sum = 0;
  int64_t b_sum = 0;
  REP(i, N) {
    b_sum += B[i];
    if (i < M) {
      w_sum += W[i];
      max_w_sum = max(max_w_sum, w_sum);
    }
    max_sum = max(max_sum, b_sum + max_w_sum);
  }
  return max_sum;
}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main() {
  std::ios::sync_with_stdio(false);
  std::cin.tie(nullptr);
  int N, M;
  std::cin >> N;
  std::vector<int64_t> B;
  std::cin >> M;
  std::vector<int64_t> W;
  REP(i, N) {
    int b;
    std::cin >> b;
    B.emplace_back(b);
  }
  REP(i, M) {
    int w;
    std::cin >> w;
    W.emplace_back(w);
  }
  auto ans = solve(N, M, B, W);
  std::cout << ans << '\n';
  return 0;
}
