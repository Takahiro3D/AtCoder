#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n) - 1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n) - 1; (i) >= (int)(m); --(i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;

int64_t solve(int N, int M, std::priority_queue<int64_t> &B, std::priority_queue<int64_t> &W) {
  int64_t sum = 0;
  int64_t B_num = 0;
  while (!B.empty() && (B.top() > 0)) {
    B_num++;
    sum += B.top();
    B.pop();
  }
  int W_num = 0;
  while (!W.empty() && (W.top() > 0) && (W_num < B_num)) {
    W_num++;
    sum += W.top();
    W.pop();
  }
  while (!B.empty() && !W.empty() && ((W.top() + B.top()) > 0)) {
    sum += B.top();
    B.pop();
    sum += W.top();
    W.pop();
  }
  return sum;
}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main() {
  std::ios::sync_with_stdio(false);
  std::cin.tie(nullptr);
  int N, M;
  std::cin >> N;
  std::priority_queue<int64_t> B;
  std::cin >> M;
  std::priority_queue<int64_t> W;
  REP(i, N) {
    int b;
    std::cin >> b;
    B.emplace(b);
  }
  REP(i, M) {
    int w;
    std::cin >> w;
    W.emplace(w);
  }
  auto ans = solve(N, M, B, W);
  std::cout << ans << '\n';
  return 0;
}
