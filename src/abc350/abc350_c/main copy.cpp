#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n)-1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n)-1; (i) >= (int)(m); --(i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;

using Vp = vector<pair<int64_t, int64_t>>;

Vp solve(int N, std::vector<int64_t> &A) {
  Vp vp;

  for (int i = 0; i < N; i++) {
    const int a = i + 1;
    const int b = A[i];
    if (b != a) {
      // swap
      const auto j = b - 1;
      const auto tmp = A[i];
      A[i] = A[j];
      A[j] = tmp;

      if (a < b) {
        vp.emplace_back(pair{a, b});
      } else {
        vp.emplace_back(pair{b, a});
      }
    }
  }
  return vp;
}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main() {
  std::ios::sync_with_stdio(false);
  std::cin.tie(nullptr);
  int N;
  std::cin >> N;
  std::vector<int64_t> A(N);
  REP(i, N) { std::cin >> A[i]; }
  auto ans = solve(N, A);
  int size = ans.size();
  std::cout << size << '\n';
  REP(i, size) { std::cout << ans[i].first << ' ' << ans[i].second << '\n'; }
  return 0;
}
