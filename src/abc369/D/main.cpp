#include <algorithm>
#include <bitset>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <ctime>
#include <deque>
#include <fstream>
#include <functional>
#include <iostream>
#include <map>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <utility>
#include <vector>
using namespace std;

// Generated by 2.14.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can
// remove this line by using your custom template)
int main() {
  int N;
  cin >> N;

  vector<int64_t> A(N);
  for (int i = 0; i < N; i++) {
    cin >> A[i];
  }

  // {exp, kill num}
  vector<vector<int64_t>> dp(N + 1, vector<int64_t>(2));
  // odd
  dp[0][0] = A[0];
  // even
  dp[0][1] = 0;
  for (int i = 0; i < N - 1; i++) {
    // odd
    dp[i + 1][0] = max(dp[i][0], dp[i][1] + A[i + 1]);

    // even
    dp[i + 1][1] = max(dp[i][0] + A[i + 1] * 2, dp[i][1]);
  }

  auto ans = max(dp[N - 1][0], dp[N - 1][1]);
  cout << ans << endl;

  return 0;
}
