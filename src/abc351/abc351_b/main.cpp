#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n)-1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n)-1; (i) >= (int)(m); --(i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;

std::pair<int64_t, int64_t> solve(auto N, const std::vector<std::vector<char> > &A,
                                  const std::vector<std::vector<char> > &B) {
  REP(i, N) {
    REP(j, N) {
      if (A[i][j] != B[i][j]) {
        return {i + 1, j + 1};
      }
    }
  }
}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main() {
  std::ios::sync_with_stdio(false);
  std::cin.tie(nullptr);
  int N;
  std::cin >> N;
  std::vector<std::vector<char> > A(N, std::vector<char>(N));
  REP(i, N) {
    REP(j, N) { std::cin >> A[i][j]; }
  }
  std::vector<std::vector<char> > B(N, std::vector<char>(N));
  REP(i, N) {
    REP(j, N) { std::cin >> B[i][j]; }
  }
  auto [i, j] = solve(N, A, B);
  std::cout << i << ' ' << j << '\n';
  return 0;
}
