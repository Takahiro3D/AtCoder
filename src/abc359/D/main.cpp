#include <algorithm>
#include <bitset>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <ctime>
#include <deque>
#include <fstream>
#include <functional>
#include <iostream>
#include <map>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <utility>
#include <vector>
using namespace std;

const long long MOD = 998244353;

bool isPalindrome(string s) {
  string ns = s;
  reverse(ns.begin(), ns.end());
  return s == ns;
}

// Generated by 2.14.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can
// remove this line by using your custom template)
int main() {
  int N, K;
  cin >> N >> K;

  string S;
  cin >> S;

  map<string, int64_t> dp;
  dp[""] = 1;
  for (int i = 0; i < N; i++) {
    map<string, int64_t> old;
    swap(old, dp);
    for (auto [t, num] : old) {
      for (char c = 'A'; c <= 'B'; c++) {
        if (S[i] != c && S[i] != '?') {
          continue;
        }
        string nt = t + c;
        int size = nt.size();
        if (size == K && isPalindrome(nt)) {
          continue;
        }
        if (size == K) {
          nt.erase(nt.begin());
        }
        dp[nt] = (dp[nt] + num) % MOD;
      }
    }
  }

  int64_t ans;
  for (auto [t, num] : dp) {
    ans = (ans + num) % MOD;
  }
  cout << ans << endl;

  return 0;
}
