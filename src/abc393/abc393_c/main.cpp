#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n) - 1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n) - 1; (i) >= (int)(m); --(i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;

int64_t solve(auto N, auto M, std::vector<int> &u, std::vector<int> &v) {
  int64_t ans = 0;
  set<pair<int, int>> E;
  REP(i, M) {
    // check self loop
    if (u[i] == v[i]) {
      ans++;
      continue;
    }
    // check multiple edges
    if (u[i] > v[i]) {
      swap(u[i], v[i]);
    }
    auto ret = E.insert({u[i], v[i]});
    if (!ret.second) {
      ans++;
    }
  }
  return ans;
}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main() {
  std::ios::sync_with_stdio(false);
  std::cin.tie(nullptr);
  int N, M;
  std::cin >> N >> M;
  std::vector<int> u(M), v(M);
  REP(i, M) { std::cin >> u[i] >> v[i]; }
  auto ans = solve(N, M, u, v);
  std::cout << ans << '\n';
  return 0;
}
