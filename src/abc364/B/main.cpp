#include <algorithm>
#include <bitset>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <ctime>
#include <deque>
#include <fstream>
#include <functional>
#include <iostream>
#include <map>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <utility>
#include <vector>
using namespace std;

// image coord
struct Coord {
  int x;
  int y;
};

unordered_map<char, Coord> moveC = {{'L', {0, -1}}, {'R', {0, 1}}, {'U', {-1, 0}}, {'D', {1, 0}}};

// Generated by 2.14.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can
// remove this line by using your custom template)
int main() {
  int H, W;
  cin >> H >> W;

  Coord S;
  cin >> S.x >> S.y;
  S.x--;
  S.y--;

  vector<vector<char>> C(H, vector<char>(W));
  for (int i = 0; i < H; i++) {
    for (int j = 0; j < W; j++) {
      cin >> C[i][j];
    }
  }

  string X;
  cin >> X;

  for (auto c : X) {
    auto m = moveC[c];
    int x = max(0, min(H - 1, S.x + m.x));
    if (C[x][S.y] == '.') {
      S.x = x;
    }
    int y = max(0, min(W - 1, S.y + m.y));
    if (C[S.x][y] == '.') {
      S.y = y;
    }
  }
  S.x++;
  S.y++;

  cout << S.x << " " << S.y << endl;

  return 0;
}
