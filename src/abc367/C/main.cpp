#include <algorithm>
#include <bitset>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <ctime>
#include <deque>
#include <fstream>
#include <functional>
#include <iostream>
#include <map>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <utility>
#include <vector>
using namespace std;

void check(int K, vector<int> R, int i, vector<int> V, int sum) {
  int size = R.size();
  if (i < size) {
    auto r = R[i];
    for (int j = 1; j <= r; j++) {
      auto V_next = V;
      V_next.emplace_back(j);
      check(K, R, i + 1, V_next, sum + j);
    }
  } else {
    if (sum % K == 0) {
      for (auto v : V) {
        cout << v << " ";
      }
      cout << "\n";
    }
  }
};

// Generated by 2.14.0 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can
// remove this line by using your custom template)
int main() {
  int N, K;
  cin >> N >> K;
  vector<int> R(N);
  for (auto& r : R) {
    cin >> r;
  }

  vector<int> V;
  int sum = 0;
  check(K, R, 0, V, sum);

  return 0;
}
