#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n) - 1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n) - 1; (i) >= (int)(m); --(i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;

bool check(auto n, auto m, const std::vector<std::vector<char> > &S, const std::vector<std::vector<char> > &T) {
  int size = T.size();
  for (int i = 0; i < size; i++) {
    for (int j = 0; j < size; j++) {
      if (S[n + i][m + j] != T[i][j]) {
        return false;
      }
    }
  }
  return true;
}

std::pair<int64_t, int64_t> solve(auto N, auto M, const std::vector<std::vector<char> > &S,
                                  const std::vector<std::vector<char> > &T) {
  auto len = N - M;
  for (int i = 0; i <= len; i++) {
    for (int j = 0; j <= len; j++) {
      if (check(i, j, S, T)) {
        return {i + 1, j + 1};
      }
    }
  }
  return {0, 0};
}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main() {
  std::ios::sync_with_stdio(false);
  std::cin.tie(nullptr);
  int N, M;
  std::cin >> N;
  std::vector<std::vector<char> > S(N, std::vector<char>((N)));
  std::cin >> M;
  std::vector<std::vector<char> > T(M, std::vector<char>((M)));
  REP(i, N) {
    REP(j, N) { std::cin >> S[i][j]; }
  }
  REP(i, M) {
    REP(j, M) { std::cin >> T[i][j]; }
  }
  auto [a, b] = solve(N, M, S, T);
  std::cout << a << ' ' << b << '\n';
  return 0;
}
