#include <bits/stdc++.h>
#define REP(i, n) for (int i = 0; (i) < (int)(n); ++(i))
#define REP3(i, m, n) for (int i = (m); (i) < (int)(n); ++(i))
#define REP_R(i, n) for (int i = (int)(n) - 1; (i) >= 0; --(i))
#define REP3R(i, m, n) for (int i = (int)(n) - 1; (i) >= (int)(m); --(i))
#define ALL(x) ::std::begin(x), ::std::end(x)
using namespace std;

std::vector<int64_t> solve(int64_t N, int64_t L, int64_t R) {
  std::vector<int64_t> A(N);

  for (int64_t i = 0; i < N; i++) {
    A[i] = i + 1;
  };
  auto len = R - L + 1;
  for (int64_t i = 0; i < len; i++) {
    A[L + i - 1 ] = R - i;
  }
  return A;
}

// generated by oj-template v4.8.1 (https://github.com/online-judge-tools/template-generator)
int main() {
  std::ios::sync_with_stdio(false);
  std::cin.tie(nullptr);
  int64_t N, L, R;
  std::cin >> N >> L >> R;
  auto ans = solve(N, L, R);
  REP(i, (int)ans.size()) { std::cout << ans[i] << ' '; }
  std::cout << '\n';
  return 0;
}
